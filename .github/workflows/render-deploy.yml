name: Deploy to Render

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types: [ closed ]

jobs:
  deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper git SHA
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint || echo "Linting issues found (non-blocking)"
    
    - name: Run type checking
      run: npm run typecheck || echo "Type checking issues found (non-blocking)"
    
    - name: Run API tests
      run: npm run test:api || echo "API tests failed or not available"
      env:
        DATABASE_URL: file:./test.db
    
    - name: Run E2E tests
      run: npm run test:e2e || echo "E2E tests failed or not available"
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to Render via Hook
      if: env.RENDER_DEPLOY_HOOK_URL != ''
      run: |
        curl -X POST "${{ env.RENDER_DEPLOY_HOOK_URL }}"
      env:
        RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
    
    - name: Deploy to Render via API
      if: env.RENDER_DEPLOY_HOOK_URL == '' && env.RENDER_API_TOKEN != ''
      run: |
        curl -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": "clear", "commitSha": "${{ github.sha }}"}' \
          "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys"
      env:
        RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        RENDER_API_TOKEN: ${{ secrets.RENDER_API_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
    
    - name: Check deployment status
      if: env.RENDER_API_TOKEN != ''
      run: |
        echo "Waiting for deployment to start..."
        sleep 10
        
        # Get latest deployment status
        DEPLOY_STATUS=$(curl -s \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_TOKEN }}" \
          "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" | \
          jq -r '.[0].status // "unknown"')
        
        echo "Deployment status: $DEPLOY_STATUS"
      env:
        RENDER_API_TOKEN: ${{ secrets.RENDER_API_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
    
    - name: Notify deployment
      run: |
        echo "ðŸš€ Deployment triggered successfully!"
        echo "Commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Actor: ${{ github.actor }}"
