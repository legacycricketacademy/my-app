name: CI - Unit Tests, API Tests, and E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  PLAYWRIGHT_BROWSERS: '0'

jobs:
  # Unit and API Tests
  unit-api-tests:
    name: Unit & API Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run check
      
    - name: Run unit tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        
    - name: Run API tests with coverage
      run: npm run test:api:coverage
      env:
        NODE_ENV: test
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # E2E Tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: unit-api-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: development
        
    - name: Start server
      run: |
        VITE_AUTH_PROVIDER=mock NODE_ENV=development PORT=3000 DATABASE_URL="postgresql://localhost:5432/cricket_academy" node dist/index.js &
        sleep 10
        curl -f http://localhost:3000/api/health || exit 1
      env:
        NODE_ENV: development
        
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        BASE_URL: http://localhost:3000
        
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

  # Mobile E2E Tests
  mobile-e2e-tests:
    name: Mobile E2E Tests
    runs-on: ubuntu-latest
    needs: unit-api-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: development
        
    - name: Start server
      run: |
        VITE_AUTH_PROVIDER=mock NODE_ENV=development PORT=3000 DATABASE_URL="postgresql://localhost:5432/cricket_academy" node dist/index.js &
        sleep 10
        curl -f http://localhost:3000/api/health || exit 1
      env:
        NODE_ENV: development
        
    - name: Run Mobile E2E tests
      run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      env:
        BASE_URL: http://localhost:3000
        
    - name: Upload Mobile Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-playwright-report
        path: playwright-report/
        retention-days: 30

  # Accessibility Tests
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: unit-api-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: development
        
    - name: Start server
      run: |
        VITE_AUTH_PROVIDER=mock NODE_ENV=development PORT=3000 DATABASE_URL="postgresql://localhost:5432/cricket_academy" node dist/index.js &
        sleep 10
        curl -f http://localhost:3000/api/health || exit 1
      env:
        NODE_ENV: development
        
    - name: Run Accessibility tests
      run: npx playwright test e2e/accessibility.spec.ts
      env:
        BASE_URL: http://localhost:3000
        
    - name: Upload Accessibility report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-report
        path: playwright-report/
        retention-days: 30

  # Performance Tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: unit-api-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: development
        
    - name: Start server
      run: |
        VITE_AUTH_PROVIDER=mock NODE_ENV=development PORT=3000 DATABASE_URL="postgresql://localhost:5432/cricket_academy" node dist/index.js &
        sleep 10
        curl -f http://localhost:3000/api/health || exit 1
      env:
        NODE_ENV: development
        
    - name: Run Performance tests
      run: npx playwright test e2e/performance.spec.ts
      env:
        BASE_URL: http://localhost:3000
        
    - name: Upload Performance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-report
        path: playwright-report/
        retention-days: 30

  # Test Summary
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-api-tests, e2e-tests, mobile-e2e-tests, accessibility-tests, performance-tests]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Display test summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit & API Tests | ${{ needs.unit-api-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| E2E Tests | ${{ needs.e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Mobile E2E Tests | ${{ needs.mobile-e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Accessibility Tests | ${{ needs.accessibility-tests.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Performance Tests | ${{ needs.performance-tests.result }} |" >> $GITHUB_STEP_SUMMARY
