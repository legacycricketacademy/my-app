name: CI Smoke

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  smoke:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: cricket_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run database migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/cricket_test
        run: npm run db:migrate
      
      - name: Start server in background
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/cricket_test
          SESSION_SECRET: test-secret
          NODE_ENV: production
          PORT: 3000
        run: |
          node dist/index.js &
          echo $! > server.pid
      
      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000/api/_debug/ping --timeout 30000
      
      - name: Test health endpoint
        run: |
          curl -f http://localhost:3000/api/_debug/ping
          curl -f http://localhost:3000/api/_debug/echo
      
      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi
