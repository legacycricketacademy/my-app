name: E2E Tests (Render)

on:
  workflow_dispatch: {}
  push:
    branches:
      - deploy/render-staging
  repository_dispatch:
    types: [render_deploy_succeeded]
  schedule:
    - cron: '*/30 * * * *'

jobs:
  smoke-on-deploy:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.46.0-focal
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (ci)
        run: npm ci

      - name: Wait for service health
        env:
          BASE_URL: https://cricket-academy-app.onrender.com
        run: |
          for i in {1..24}; do \
            echo "Health check attempt $i"; \
            if curl -fsS "$BASE_URL/api/ping" >/dev/null; then echo "Healthy"; exit 0; fi; \
            sleep 5; \
          done; \
          echo "Service did not become healthy in time"; exit 1

      - name: Run Playwright smoke (Render)
        env:
          BASE_URL: https://cricket-academy-app.onrender.com
          ADMIN_EMAIL: admin@test.com
          ADMIN_PASSWORD: password
        run: |
          npx playwright test tests/smoke.login-api.spec.ts --reporter=list || true

      - name: Upload smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-smoke-results
          path: |
            test-results/**
            playwright-report/**
          if-no-files-found: ignore

  e2e:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.46.0-focal
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (ci)
        run: npm ci

      - name: Run Playwright E2E (Render)
        env:
          BASE_URL: https://cricket-academy-app.onrender.com
          ADMIN_EMAIL: admin@test.com
          ADMIN_PASSWORD: password
        run: |
          npx playwright test --reporter=list || true

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: |
            test-results/**
            playwright-report/**
          if-no-files-found: ignore

name: E2E after Render deploy

on:
  push:
    branches: [main]     # push to main triggers Render deploy
  workflow_dispatch:     # manual run
  repository_dispatch:
    types: [render_deployed]

jobs:
  e2e-local:
    name: E2E Tests (Local Build)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Build application
        run: npm run build
      
      - name: Setup test database
        run: |
          # Use SQLite for CI tests
          touch dev.db
        env:
          DATABASE_URL: file:./dev.db
      
      - name: Run E2E tests (local)
        run: npm run test:e2e
        env:
          CI: true
          RUN_LOCAL_WEB: '1'
          BASE_URL: http://localhost:10000
          DATABASE_URL: file:./dev.db
          SESSION_SECRET: test-secret-ci
          JWT_ACCESS_SECRET: test-jwt-secret-ci
          NODE_ENV: development
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-local
          path: playwright-report/
          retention-days: 7

  e2e-render:
    name: E2E Tests (Render Deployment)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Wait for Render deployment
        run: npx wait-on https://legacy-cricket-app.onrender.com/healthz --timeout 180000 --interval 5000 || echo "Health check timed out, continuing anyway..."
      
      - name: Run E2E tests (Render)
        run: npm run test:e2e:render
        env:
          CI: true
          BASE_URL: https://legacy-cricket-app.onrender.com
      
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-render
          path: playwright-report/
          retention-days: 7

