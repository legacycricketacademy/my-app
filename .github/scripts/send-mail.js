/**
 * Email Notification Script for E2E Test Results
 * 
 * This script sends a summary of E2E test results via Gmail SMTP using nodemailer.
 * It reads the test summary from e2e-failures.txt and sends it to a configured email address.
 * 
 * Requirements:
 * - GMAIL_USER and GMAIL_PASS environment variables (GitHub Secrets)
 * - Gmail App Password (not regular password) - see: https://support.google.com/accounts/answer/185833
 * 
 * The script gracefully handles missing credentials by printing to console instead of failing.
 */

import nodemailer from "nodemailer";
import fs from "fs";

// Read test summary from file generated by run-e2e.sh
const SUMMARY_FILE = "e2e-failures.txt";
const summary = fs.existsSync(SUMMARY_FILE)
  ? fs.readFileSync(SUMMARY_FILE, "utf8")
  : "All tests passed successfully. (No summary file found)";

console.log("📧 Preparing email notification...");

// Check if email credentials are configured
// If not set, gracefully skip email and print summary to console
if (!process.env.GMAIL_USER || !process.env.GMAIL_PASS) {
  console.log("");
  console.log("⚠️  Email credentials not configured.");
  console.log("   Set GMAIL_USER and GMAIL_PASS in GitHub Secrets to enable email notifications.");
  console.log("");
  console.log("📧 Test Summary:");
  console.log("═══════════════════════════════════════════════════════════════");
  console.log(summary);
  console.log("═══════════════════════════════════════════════════════════════");
  process.exit(0);
}

// Configure Gmail SMTP transporter using nodemailer
const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.GMAIL_USER,
    pass: process.env.GMAIL_PASS,  // Must be a Gmail App Password, not regular password
  },
});

// Email configuration
const RECIPIENT_EMAIL = "dude.dudetap001@gmail.com";
const mailOptions = {
  from: process.env.GMAIL_USER,
  to: RECIPIENT_EMAIL,
  subject: "E2E Test Summary - Render Production",
  text: summary,
  // Optional: You can add HTML version for better formatting
  // html: `<pre style="font-family: monospace; white-space: pre-wrap;">${summary.replace(/\n/g, '<br>')}</pre>`,
};

// Send email and handle errors gracefully
try {
  console.log(`📤 Sending email to ${RECIPIENT_EMAIL}...`);
  const info = await transporter.sendMail(mailOptions);
  console.log("✅ Email sent successfully!");
  console.log(`   Message ID: ${info.messageId}`);
  console.log(`   Recipient: ${RECIPIENT_EMAIL}`);
} catch (error) {
  // Log error but don't fail the workflow
  console.error("");
  console.error("❌ Failed to send email:", error.message);
  console.error("");
  console.error("Common issues:");
  console.error("  • GMAIL_PASS must be a Gmail App Password (not regular password)");
  console.error("  • 2-Factor Authentication must be enabled on Gmail account");
  console.error("  • Check GitHub Secrets are correctly set");
  console.error("");
  console.log("📧 Test Summary (email failed, printing instead):");
  console.log("═══════════════════════════════════════════════════════════════");
  console.log(summary);
  console.log("═══════════════════════════════════════════════════════════════");
  // Exit with success to not fail the workflow
  process.exit(0);
}
